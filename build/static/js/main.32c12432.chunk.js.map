{"version":3,"sources":["map/NotesForm.js","map/map.js","map/NoteList.js","App.js","index.js","map/location.png","map/mylocation.png"],"names":["NotesForm","_ref","onAddNote","text","setText","useState","user","setUser","React","createElement","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Map","currentLocation","mapRef","useRef","notes","setNotes","showForm","setShowForm","formPosition","setFormPosition","fetchNotes","fetch","then","response","json","data","current","forEach","note","noteIcon","L","icon","iconUrl","noteIconUrl","iconSize","iconAnchor","popupAnchor","marker","latitude","longitude","title","addTo","bindPopup","concat","catch","error","console","useEffect","map","center","lat","lng","zoom","tileLayer","attribution","myLocationIcon","myLocationIconUrl","openPopup","on","latlng","off","remove","id","style","height","width","onClick","handleMyLocation","setView","LatLng","getZoom","handleToggleForm","newNote","method","headers","Content-Type","body","JSON","stringify","ok","log","Error","addedNote","position","NotesList","location","key","App","setCurrentLocation","navigator","geolocation","getCurrentPosition","coords","alert","className","container","document","getElementById","createRoot","render","StrictMode","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.32c12432.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst NotesForm = ({ onAddNote }) => {\n  const [text, setText] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!text || !user) return;\n    onAddNote({ text, user });\n    setText(\"\");\n    setUser(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        value={user}\n        onChange={(e) => setUser(e.target.value)}\n      />\n      <textarea\n        placeholder=\"Write your note here\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      ></textarea>\n      <button type=\"submit\">Add Note</button>\n    </form>\n  );\n};\n\nexport default NotesForm;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport noteIconUrl from \"./location.png\";\nimport myLocationIconUrl from \"./mylocation.png\";\nimport NotesForm from \"./NotesForm\";\n\nconst backendUrl = \"http://54.66.98.246/api/note\";\n\nconst Map = ({ currentLocation }) => {\n  const mapRef = useRef(null);\n  const [notes, setNotes] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formPosition, setFormPosition] = useState(null);\n\n  const fetchNotes = () => {\n    fetch(backendUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        setNotes(data);\n        if (mapRef.current) {\n          data.forEach((note) => {\n            const noteIcon = L.icon({\n              iconUrl: noteIconUrl,\n              iconSize: [50, 50],\n              iconAnchor: [25, 50],\n              popupAnchor: [0, -50],\n            });\n\n            L.marker([note.latitude, note.longitude], {\n              icon: noteIcon,\n              title: note.user,\n            })\n              .addTo(mapRef.current)\n              .bindPopup(`<strong>${note.user}</strong>: ${note.text}`);\n          });\n        }\n      })\n      .catch((error) => console.error(\"Error fetching notes:\", error));\n  };\n\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [currentLocation.lat, currentLocation.lng],\n      zoom: 13,\n    });\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: \"&copy; OpenStreetMap contributors\",\n    }).addTo(mapRef.current);\n\n    const myLocationIcon = L.icon({\n      iconUrl: myLocationIconUrl,\n      iconSize: [50, 50],\n      iconAnchor: [25, 50],\n      popupAnchor: [0, -50],\n    });\n\n    L.marker([currentLocation.lat, currentLocation.lng], {\n      icon: myLocationIcon,\n      title: \"Your Location\",\n    })\n      .addTo(mapRef.current)\n      .bindPopup(\"You are here\")\n      .openPopup();\n\n    fetchNotes(); // Fetch notes when the component is mounted\n\n    mapRef.current.on(\"click\", function (e) {\n      setFormPosition(e.latlng);\n      setShowForm(true);\n    });\n\n    return () => {\n      mapRef.current.off(\"click\");\n      mapRef.current.remove();\n    };\n  }, [currentLocation]); // Dependency array to fetch notes only when currentLocation changes\n\n  const handleAddNote = (note) => {\n    const newNote = {\n      ...note,\n      latitude: formPosition.lat,\n      longitude: formPosition.lng,\n    };\n\n    fetch(backendUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((addedNote) => {\n        setNotes([...notes, addedNote]); // Update local state\n        setShowForm(false);\n        setFormPosition(null);\n        fetchNotes(); // Refetch notes to update the map\n      })\n      .catch((error) => console.error(\"Error posting note:\", error));\n  };\n\n  const handleMyLocation = () => {\n    if (!mapRef.current) return;\n    mapRef.current.setView(\n      new L.LatLng(currentLocation.lat, currentLocation.lng),\n      mapRef.current.getZoom()\n    );\n  };\n\n  const handleToggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: \"400px\", width: \"100%\" }}></div>\n      <button onClick={handleMyLocation}>My Location</button>\n      <button onClick={handleToggleForm}>\n        {showForm ? \"Hide Form\" : \"Add Note\"}\n      </button>\n      {showForm && (\n        <NotesForm onAddNote={handleAddNote} position={formPosition} />\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\n\nconst NotesList = ({ notes }) => {\n    return (\n      <ul>\n        {notes.map((note) => (\n          note.location && (\n            <li key={note.id}>\n              <strong>{note.user}</strong>: {note.text} (Located at{\" \"}\n              {note.location.lat}, {note.location.lng})\n            </li>\n          )\n        ))}\n      </ul>\n    );\n  };\n  \n  export default NotesList;\n  \n","import React, { useState, useEffect } from \"react\";\nimport Map from \"./map/map\";\nimport NotesList from \"./map/NoteList\";\n\nfunction App() {\n  const [currentLocation, setCurrentLocation] = useState({ lat: 0, lng: 0 });\n  const [notes] = useState([]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setCurrentLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      },\n      () => {\n        alert(\"Could not fetch your location!\");\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <header className=\"app-header\">\n        <h1>My Community Landmark</h1>\n        <p>Share and discover notes about places in your community!</p>\n      </header>\n      <Map currentLocation={currentLocation} notes={notes} />\n      <NotesList notes={notes} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App'; // Adjust if your main component is located elsewhere\nimport './index.css'; // Adjust if you have a different file for CSS or if it's located elsewhere\n\nconst container = document.getElementById('root'); // Ensure the ID matches the ID in your index.html\nconst root = createRoot(container);\n\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n","module.exports = __webpack_public_path__ + \"static/media/location.4b15d219.png\";","module.exports = __webpack_public_path__ + \"static/media/mylocation.8577c64d.png\";"],"sourceRoot":""}